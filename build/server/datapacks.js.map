{
  "version": 3,
  "sources": ["../../src/server/datapacks.ts"],
  "sourcesContent": ["export class DataPack {\n    type: string;\n    constructor(type: string) {\n        this.type = type;\n    }\n\n    toJSON(): string {\n        return '';\n    }\n}\nexport class StateChangeRequestPack extends DataPack {\n    objectID;\n    newValue: any;\n    constructor(objectID: string, newValue: any) {\n        super('iobStateChangeRequest');\n        this.objectID = objectID;\n        this.newValue = newValue;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            objectID: this.objectID,\n            newValue: this.newValue,\n        };\n        return map;\n    }\n}\n\nexport class StateChangedDataPack extends DataPack {\n    objectID;\n    value;\n    ack;\n    lc;\n    ts;\n    constructor(objectID: string, value: any, ack: boolean, lc: number, ts: number) {\n        super('iobStateChanged');\n        this.objectID = objectID;\n        this.value = value;\n        this.ack = ack;\n        this.lc = lc;\n        this.ts = ts;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            objectID: this.objectID,\n            value: this.value,\n            ack: this.ack,\n            ts: this.ts,\n            lc: this.lc,\n        };\n        return map;\n    }\n}\n\nexport class EnumUpdateRequestPack extends DataPack {\n    id: string;\n    constructor(id: string) {\n        super('enumUpdateRequest');\n        this.id = id;\n    }\n}\n\nexport class EnumUpdatePack extends DataPack {\n    id: string;\n    enumsJSON: any;\n    constructor(id: string, enumsJSON: any) {\n        super('enumUpdate');\n        this.id = id;\n        this.enumsJSON = enumsJSON;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            enums: this.enumsJSON,\n        };\n        return map;\n    }\n}\n\nexport class FirstPingPack extends DataPack {\n    constructor() {\n        super('firstPingFromIob2');\n    }\n\n    toJSON(): string {\n        const map = {\n            type: this.type,\n            content: {},\n        };\n        return JSON.stringify(map).toString();\n    }\n}\n\nexport class NewAesPacket extends DataPack {\n    constructor() {\n        super('setNewAes');\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            content: {},\n        };\n        return map;\n    }\n}\n\nexport class RequestLoginPacket extends DataPack {\n    deviceName: string;\n    deviceID: string;\n    key: string;\n    version: string;\n    user: string;\n    password: string;\n    constructor(deviceName: string, deviceID: string, key: string, version: string, user: string, password: string) {\n        super('requestLogin');\n        this.deviceName = deviceName;\n        this.deviceID = deviceID;\n        this.key = key;\n        this.version = version;\n        this.user = user;\n        this.password = password;\n    }\n}\n\nexport class LoginAnswer extends DataPack {\n    key;\n    suc;\n    constructor(key: string, suc: boolean) {\n        super('answerLogin');\n        this.key = key;\n        this.suc = suc;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            key: this.key,\n            suc: this.suc,\n        };\n        return map;\n    }\n}\n\nexport class SubscribeToDataPointsPack extends DataPack {\n    dataPoints;\n    constructor(dataPoints: any) {\n        super('subscribeToDataPoints');\n        this.dataPoints = dataPoints;\n    }\n}\n\nexport class SubscribeToDataPointsHistory extends DataPack {\n    dataPoint;\n    end;\n    start;\n    minInterval;\n    constructor(dataPoint: any, end: any, start: any, minInterval: any) {\n        super('subscribeHistory');\n        this.dataPoint = dataPoint;\n        this.end = end;\n        this.start = start;\n        this.minInterval = minInterval;\n    }\n}\n\nexport class LoginKeyPacket extends DataPack {\n    key;\n    constructor(key: string) {\n        super('loginKey');\n        this.key = key;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            key: this.key,\n        };\n        return map;\n    }\n}\n\nexport class LoginApprovedPacket extends DataPack {\n    release;\n    constructor(release: string) {\n        super('loginApproved');\n        this.release = release;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            release: this.release,\n        };\n        return map;\n    }\n}\n\nexport class LoginDeclinedPacket extends DataPack {\n    constructor() {\n        super('loginDeclined');\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n        };\n        return map;\n    }\n}\n\nexport class WrongAesKeyPack extends DataPack {\n    constructor() {\n        super('wrongAesKey');\n    }\n    toJSON(): any {\n        const map = {\n            type: this.type,\n        };\n        return map;\n    }\n}\n\nexport class TemplateSettingCreatePack extends DataPack {\n    name;\n    constructor(name: any) {\n        super('templateSettingCreate');\n        this.name = name;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n        };\n        return map;\n    }\n}\n\nexport class TemplateSettingsRequestedPack extends DataPack {\n    list;\n    constructor(list: string[]) {\n        super('requestTemplatesSettings');\n        this.list = list;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            settings: this.list,\n        };\n        return map;\n    }\n}\n\nexport class TemplateSettingUploadPack extends DataPack {\n    name;\n    devices;\n    screens;\n    widgets;\n    constructor(name: any, devices: any, screens: any, widgets: any) {\n        super('uploadTemplateSetting');\n        this.name = name;\n        this.devices = devices;\n        this.screens = screens;\n        this.widgets = widgets;\n    }\n}\n\nexport class TemplateSettingUploadSuccessPack extends DataPack {\n    constructor() {\n        super('uploadTemplateSettingSuccess');\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n        };\n        return map;\n    }\n}\n\nexport class GetTemplateSettingPack extends DataPack {\n    devices;\n    screens;\n    widgets;\n\n    constructor(devices: any, screens: any, widgets: any) {\n        super('getTemplatesSetting');\n        this.devices = devices;\n        this.screens = screens;\n        this.widgets = widgets;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            screens: this.screens,\n            widget: this.widgets,\n            devices: this.devices,\n        };\n        return map;\n    }\n}\n\nexport class NotificationPack extends DataPack {\n    onlySendNotification?: boolean;\n    content?: string | Map<string, any>;\n    date?: Date;\n    constructor(onlySendNotification?: boolean, content?: string | Map<string, any>, date?: Date) {\n        super('notification');\n        this.onlySendNotification = onlySendNotification;\n        this.content = content;\n        this.date = date;\n    }\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            onlySendNotification: this.onlySendNotification,\n            content: this.content,\n            date: this.date,\n        };\n        return map;\n    }\n}\n\nexport class AnswerSubscribeToDataPointsPack extends DataPack {\n    dataValues;\n    constructor(dataValues: any) {\n        super('answerSubscribeToDataPoints');\n        this.dataValues = dataValues;\n    }\n\n    toJSON(): any {\n        const map = {\n            type: this.type,\n            value: this.dataValues,\n        };\n        return map;\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
